-- Generated by CSharp.lua Compiler
local System = System
local VoidSharp
local ListTeam
local ListPlayer
System.import(function (out)
  VoidSharp = out.VoidSharp
  ListTeam = System.List(VoidSharp.Team)
  ListPlayer = System.List(VoidSharp.Player)
end)
System.namespace("VoidSharp", function (namespace)
  namespace.class("Team", function (namespace)
    local getName, getColor, getClass, getPlayers, getSpawnPoint, getSpawnPoints, getPlayerCount, GetName, 
    GetAllTeams, NumPlayers, GetSpawnPoint, GetSpawnPoints, GetClass, GetPlayers, GetColor, class, 
    __ctor__
    __ctor__ = function (this, index)
      this.Index = index
    end
    getName = function (this)
      return GetName(this.Index)
    end
    getColor = function (this)
      return GetColor(this.Index)
    end
    getClass = function (this)
      return GetClass(this.Index)
    end
    getPlayers = function (this)
      return GetPlayers(this.Index)
    end
    getSpawnPoint = function (this)
      return GetSpawnPoint(this.Index)
    end
    getSpawnPoints = function (this)
      return GetSpawnPoints(this.Index)
    end
    getPlayerCount = function (this)
      return NumPlayers(this.Index)
    end
    -- <summary>
    -- Name of the team.
    -- </summary>
    GetName = function (teamIndex)
      return VoidSharp.Globals.getTeam():GetName(teamIndex)
    end
    -- <summary>
    -- All extisting teams.
    -- </summary>
    GetAllTeams = function ()
      local teams = VoidSharp.Globals.getTeam():GetAllTeams()
      local returnVal = ListTeam()

      for _, team in System.each(teams) do
        team = System.cast(System.Object, team)
        returnVal:Add(class(team))
      end

      return returnVal
    end
    -- <summary>
    -- Returns the amount of players in a team.
    -- </summary>
    NumPlayers = function (teamIndex)
      return VoidSharp.Globals.getTeam():NumPlayers(teamIndex)
    end
    -- <summary>
    -- Returns a table of valid spawnpoint classes the team can use.
    -- </summary>
    GetSpawnPoint = function (teamIndex)
      return VoidSharp.Globals.getTeam():GetSpawnPoint(teamIndex)
    end
    -- <summary>
    -- Returns a table of valid spawnpoint entities the team can use.
    -- </summary>
    GetSpawnPoints = function (teamIndex)
      return VoidSharp.Globals.getTeam():GetSpawnPoints(teamIndex)
    end
    -- <summary>
    -- Returns the selectable classes for the given team.
    -- </summary>
    GetClass = function (teamIndex)
      return VoidSharp.Globals.getTeam():GetClass(teamIndex)
    end
    -- <summary>
    -- Returns a table with all player of the specified team.
    -- </summary>
    GetPlayers = function (teamIndex)
      local gmodPlayers = VoidSharp.Globals.getTeam():GetPlayers(teamIndex)
      local players = ListPlayer()

      for _, player in System.each(gmodPlayers) do
        player = System.cast(System.Object, player)
        local ply = System.new(VoidSharp.Entity, 2, player)
        players:Add(System.cast(VoidSharp.Player, ply))
      end

      return players:ToArray()
    end
    -- <summary>
    -- Returns the team's color.
    -- </summary>
    GetColor = function (teamIndex)
      local gmodColor = VoidSharp.Globals.getTeam():GetColor(teamIndex)
      return VoidSharp.Color.FromGmodColor(gmodColor)
    end
    class = {
      Index = 0,
      getName = getName,
      getColor = getColor,
      getClass = getClass,
      getPlayers = getPlayers,
      getSpawnPoint = getSpawnPoint,
      getSpawnPoints = getSpawnPoints,
      getPlayerCount = getPlayerCount,
      GetAllTeams = GetAllTeams,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          properties = {
            { "Class", 0x206, System.String, getClass },
            { "Color", 0x206, out.VoidSharp.Color, getColor },
            { "Index", 0x6, System.Int32 },
            { "Name", 0x206, System.String, getName },
            { "PlayerCount", 0x206, System.Int32, getPlayerCount },
            { "Players", 0x206, System.Array(out.VoidSharp.Player), getPlayers },
            { "SpawnPoint", 0x206, out.Vector, getSpawnPoint },
            { "SpawnPoints", 0x206, System.Array(out.Vector), getSpawnPoints }
          },
          methods = {
            { ".ctor", 0x106, nil, System.Int32 },
            { "GetAllTeams", 0x8E, GetAllTeams, System.List(out.VoidSharp.Team) },
            { "GetClass", 0x189, GetClass, System.Int32, System.String },
            { "GetColor", 0x189, GetColor, System.Int32, out.VoidSharp.Color },
            { "GetName", 0x189, GetName, System.Int32, System.String },
            { "GetPlayers", 0x189, GetPlayers, System.Int32, System.Array(out.VoidSharp.Player) },
            { "GetSpawnPoint", 0x189, GetSpawnPoint, System.Int32, out.Vector },
            { "GetSpawnPoints", 0x189, GetSpawnPoints, System.Int32, System.Array(out.Vector) },
            { "NumPlayers", 0x189, NumPlayers, System.Int32, System.Int32 }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
