-- Generated by CSharp.lua Compiler
local System = System
local VoidSharp
System.import(function (out)
  VoidSharp = out.VoidSharp
end)
System.namespace("VoidSharp", function (namespace)
  namespace.class("VoidLib", function (namespace)
    local Notify, Notify1, RegisterAddon
    -- <summary>
    -- Creates a notification. (CLIENTSIDE ONLY)
    -- </summary>
    -- <param name="upper">The upper text.</param>
    -- <param name="text">The lower text.</param>
    -- <param name="color">The color of the notification.</param>
    -- <param name="length">The length of the notification (in seconds)</param>
    Notify = function (upper, text, color, length)
      if not VoidSharp.Realm.IsClient() then
        System.throw(System.Exception("Running a client-side method from server!"))
      end

      local func = VoidSharp.Globals.getVoidLib().Notify
      func(upper, text, color, length)
    end
    -- <summary>
    -- Notifies a player. (SERVERSIDE ONLY)
    -- </summary>
    -- <param name="ply">The player to notify.</param>
    -- <param name="upper">The upper text.</param>
    -- <param name="text">The lower text.</param>
    -- <param name="color">The color of the notification.</param>
    -- <param name="length">The length of the notification (in seconds)</param>
    Notify1 = function (ply, upper, text, color, length)
      if not VoidSharp.Realm.IsServer() then
        System.throw(System.Exception("Running a server-side method from client!"))
      end

      local func = VoidSharp.Globals.getVoidLib().Notify
      func(ply, upper, text, color, length)
    end
    -- <summary>
    -- Registers an addon to VoidLib Tracker.
    -- </summary>
    -- <param name="addonName">The addon name. (global tables have to match)</param>
    -- <param name="addonId">The GModStore ID of the addon.</param>
    -- <param name="license">The license of the customer.</param>
    RegisterAddon = function (addonName, addonId, license)
      VoidSharp.Globals.getVoidLib().Tracker:RegisterAddon(addonName, addonId, license)
    end
    return {
      Notify = Notify,
      Notify1 = Notify1,
      RegisterAddon = RegisterAddon,
      __metadata__ = function (out)
        return {
          methods = {
            { "Notify", 0x40E, Notify, System.String, System.String, out.VoidSharp.Color, System.Int32 },
            { "Notify", 0x50E, Notify1, out.VoidSharp.Player, System.String, System.String, out.VoidSharp.Color, System.Int32 },
            { "RegisterAddon", 0x30E, RegisterAddon, System.String, System.Int32, System.String }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
