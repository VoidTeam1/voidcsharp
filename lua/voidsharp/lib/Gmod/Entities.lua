-- Generated by CSharp.lua Compiler
local System = System
local VoidSharp
local ListEntity
System.import(function (out)
  VoidSharp = out.VoidSharp
  ListEntity = System.List(VoidSharp.Entity)
end)
System.namespace("VoidSharp", function (namespace)
  namespace.class("Entities", function (namespace)
    local GetAll
    -- <summary>
    -- Returns a table of all existing entities. The table is sequential
    -- </summary>
    -- <returns></returns>
    GetAll = function ()
      local ents = ListEntity()

      for _, gmodEnt in System.each(VoidSharp.Globals.getEnts():GetAll()) do
        gmodEnt = System.cast(System.Object, gmodEnt)
        if gmodEnt ~= nil and gmodEnt:IsValid() then
          ents:Add(VoidSharp.Entity.FromGmod(gmodEnt))
        end
      end

      return ents:ToArray()
    end
    return {
      GetAll = GetAll,
      __metadata__ = function (out)
        return {
          methods = {
            { "GetAll", 0x8E, GetAll, System.Array(out.VoidSharp.Entity) }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
