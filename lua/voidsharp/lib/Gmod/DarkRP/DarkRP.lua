-- Generated by CSharp.lua Compiler
local System = System
local VoidSharp
local VoidSharpDarkRP
local ListJob
System.import(function (out)
  VoidSharp = out.VoidSharp
  VoidSharpDarkRP = VoidSharp.DarkRP
  ListJob = System.List(VoidSharpDarkRP.Job)
end)
System.namespace("VoidSharp.DarkRP", function (namespace)
  -- ReSharper disable once InconsistentNaming
  namespace.class("DarkRP", function (namespace)
    local GetJob, GetAllJobs, GetJobByCommand
    GetJob = function (team)
      return _G.RPExtraTeams:get(team.Index)
    end
    GetAllJobs = function ()
      local teams = VoidSharp.Team.GetAllTeams()
      local jobs = ListJob()
      for _, team in System.each(teams) do
        local job = VoidSharpDarkRP.Job(team)
        jobs:Add(job)
      end

      return jobs
    end
    GetJobByCommand = function (command)
      local teams = VoidSharp.Team.GetAllTeams()
      for _, team in System.each(teams) do
        local job = VoidSharpDarkRP.Job(team)
        if job.Command == command then
          return job
        end
      end

      return nil
    end
    return {
      IsLoaded = false,
      GetJob = GetJob,
      GetAllJobs = GetAllJobs,
      GetJobByCommand = GetJobByCommand,
      __metadata__ = function (out)
        return {
          properties = {
            { "IsLoaded", 0xE, System.Boolean }
          },
          methods = {
            { "GetAllJobs", 0x8E, GetAllJobs, System.List(out.VoidSharp.DarkRP.Job) },
            { "GetJob", 0x18E, GetJob, out.VoidSharp.Team, System.Object },
            { "GetJobByCommand", 0x18E, GetJobByCommand, System.String, out.VoidSharp.DarkRP.Job }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
