-- Generated by CSharp.lua Compiler
local System = System
local VoidSharpORM
local DictTypeISerializerBase
System.import(function (out)
  VoidSharpORM = VoidSharp.ORM
  DictTypeISerializerBase = System.Dictionary(System.Type, VoidSharpORM.ISerializerBase)
end)
System.namespace("VoidSharp.ORM", function (namespace)
  namespace.class("SerializerMap", function (namespace)
    local RegisterSerializer, ConvertToInt, class, static
    static = function (this)
      this.Serializers = DictTypeISerializerBase()
    end
    RegisterSerializer = function (TType, TSerializer)
      local t = TSerializer()
      class.Serializers:set(System.typeof(TType), t)
    end
    ConvertToInt = function (val)
      val = tonumber(val)
      return System.cast(System.Int32, val)
    end
    class = {
      RegisterSerializer = RegisterSerializer,
      ConvertToInt = ConvertToInt,
      static = static,
      __metadata__ = function (out)
        return {
          properties = {
            { "Serializers", 0xE, System.Dictionary(System.Type, out.VoidSharp.ORM.ISerializerBase) }
          },
          methods = {
            { "ConvertToInt", 0x18E, ConvertToInt, System.Object, System.Int32 },
            { "RegisterSerializer", 0x2000E, RegisterSerializer, function (TType, TSerializer) return end }
          },
          class = { 0xE }
        }
      end
    }
    return class
  end)
end)
