-- Generated by CSharp.lua Compiler
local System = System
local DictStringObject = System.Dictionary(System.String, System.Object)
local ListDictStringObject = System.List(DictStringObject)
local VoidSharpORM
System.import(function (out)
  VoidSharpORM = VoidSharp.ORM
end)
System.namespace("VoidSharp.ORM", function (namespace)
  namespace.class("DatabaseResult_1", function (namespace)
    return function (T)
      local ToList, __ctor__
      local ListT = System.List(T)
      __ctor__ = function (this, result)
        this.Result = result
      end
      ToList = function (this)
        local list = ListT()
        local dict = System.cast(ListDictStringObject, this.Result)
        for _, res in System.each(dict) do
          local t = T()
          local objectMapper = VoidSharpORM.ObjectMapper(t)
          objectMapper:AssignValues(res)
          list:Add(t)
        end

        return list
      end
      return {
        ToList = ToList,
        __ctor__ = __ctor__,
        __metadata__ = function (out)
          return {
            properties = {
              { "Result", 0x6, System.Object }
            },
            methods = {
              { ".ctor", 0x106, nil, System.Object },
              { "ToList", 0x86, ToList, System.List(T) }
            },
            class = { 0x106, T }
          }
        end
      }
    end
  end)
end)
