-- Generated by CSharp.lua Compiler
local System = System
local ArrayObject = System.Array(System.Object)
local VoidSharp
local VoidSharpHandlers
System.import(function (out)
  VoidSharp = out.VoidSharp
  VoidSharpHandlers = VoidSharp.Handlers
end)
System.namespace("VoidSharp.Handlers", function (namespace)
  namespace.class("ConCommandHandler", function (namespace)
    local InitializeConCommands
    -- <summary>
    -- Initializes concommands for usage in passed instance.
    -- </summary>
    -- <param name="instance">The instance of the class.</param>
    InitializeConCommands = function (instance)
      local methods = VoidSharpHandlers.ConCommandAttribute.GetAllConCommandAttributes(instance:GetType())
      for _, method in System.each(methods) do
        local hookAttribute = System.cast(VoidSharpHandlers.ConCommandAttribute, method:GetCustomAttributes(System.typeof(VoidSharpHandlers.ConCommandAttribute), true):get(0))

        local name = hookAttribute.Name

        VoidSharp.Globals.AddConCommand(name, function (player, s, arg3, arg4)
          method:Invoke(instance, ArrayObject(player, s, arg3, arg4))
        end, nil, nil, 0)
      end
    end
    return {
      InitializeConCommands = InitializeConCommands,
      __metadata__ = function (out)
        return {
          methods = {
            { "InitializeConCommands", 0x10E, InitializeConCommands, System.Object }
          },
          class = { 0xE }
        }
      end
    }
  end)
end)
