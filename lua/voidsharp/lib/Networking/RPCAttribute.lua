-- Generated by CSharp.lua Compiler
local System = System
local Linq = System.Linq.Enumerable
System.namespace("VoidSharp.Networking", function (namespace)
  -- ReSharper disable once InconsistentNaming
  namespace.class("RPCAttribute", function (namespace)
    local GetAllRPCAttributes, class
    -- <summary>
    -- Gets all methods which have a RPC attribute.
    -- </summary>
    -- <param name="type">The type (preferably Class) to check.</param>
    -- <returns>A list of MethodInfos.</returns>
    GetAllRPCAttributes = function (type)
      local methods = Linq.ToList(Linq.Where(Linq.ToList(type:GetMethods()), function (x)
        return #x:GetCustomAttributes(System.typeof(class), false) > 0
      end))

      return methods
    end
    class = {
      base = function (out)
        return {
          System.Attribute
        }
      end,
      GetAllRPCAttributes = GetAllRPCAttributes,
      __metadata__ = function (out)
        return {
          methods = {
            { "GetAllRPCAttributes", 0x18E, GetAllRPCAttributes, System.Type, System.List(System.Reflection.MethodInfo) }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
